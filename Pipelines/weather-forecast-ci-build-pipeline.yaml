variables:
  # Agent VM image name
  vmImageName: 'windows-latest'
  
  buildConfiguration: 'Release'
   
stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build Job
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: UseDotNet@2
      displayName: 'Install .NET Core SDK'
      inputs:
        version: 6.x
        performMultiLevelLookup: true
        includePreviewVersions: true # Required for preview versions

    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        feedsToUse: 'select'
        vstsFeed: 'my-vsts-feed' # A series of numbers and letters

    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        arguments: '--configuration $(buildConfiguration)'
      displayName: 'dotnet build $(buildConfiguration)'

 
- stage: Test
  displayName: Test stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: Test
    displayName: Test Job
    pool:
      vmImage: $(vmImageName)

    steps:
     - task: DotNetCoreCLI@2
       displayName: 'Test TDD'
       inputs:
        command: test
        projects: '**/*WeatherForecastTDD/*.csproj'
        arguments: '--configuration $(buildConfiguration) --collect "XPlat Code coverage"'
        publishTestResults: true

     - task: PublishCodeCoverageResults@1
       displayName: 'Publish code coverage report'
       inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: '$(Agent.TempDirectory)/**/coverage.cobertura.xml'