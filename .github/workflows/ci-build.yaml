name: CI Build

on:
  workflow_call:
      inputs:
        SOLUTION_NAME: 
            description: 'Name of the .sln file'
            type: string
            required: true
        TEST_PROJECT_PATH:
            description: 'Test Project Path'
            type: string
            required: true

jobs:
  build-and-test:

       runs-on: self-hosted

       env:
         Solution_Name: "${{inputs.SOLUTION_NAME}}.sln"
         Test_Project_Path: "${{inputs.TEST_PROJECT_PATH}}"

       strategy:
         matrix:
            dotnet-version: [ '3.1.x', '6.0.x' ]
       steps:
            - uses: actions/checkout@v3
  
            - name: Setup .NET
              uses: actions/setup-dotnet@v3
              with:
                dotnet-version: ${{ matrix.dotnet-version }}

            - uses: actions/cache@v3
              with:
                path: ~/.nuget/packages
                # Look to see if there is a cache hit for the corresponding requirements file
                key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
                restore-keys: |
                    ${{ runner.os }}-nuget

            - name: Install/Restore dependencies
              run: dotnet restore

            - name: Build
              run: dotnet build --no-restore

            - name: Test
              run: dotnet test --no-build --verbosity normal --logger trx --results-directory "TestResults-${{ matrix.dotnet-version }}" --collect:"XPlat Code Coverage"

            - name: Upload dotnet test results
              uses: actions/upload-artifact@v3
              with:
                name: dotnet-test-results-${{ matrix.dotnet-version }}
                path: TestResults-${{ matrix.dotnet-version }}
                # Use always() to always run this step to publish test results when there are 
                # test failures
                if: ${{ always() }}

            - name: Sonar Static Code Analysis Scan
              uses: ./.github/Workflows/sonar-static-analysis.yaml
              with: 
                SONAR_PROJECT_KEY: ''
                SONAR_PROJECT_NAME: ''
                SONAR_ORGANISATION_NAME: ''
                    
            - name: CodeQL Security Analysis Scan
              uses: ./.github/Workflows/codeql-security-analysis.yaml