name: CI CD Dev

# Only trigger, when the build workflow succeeded
on:
  workflow_call:
    inputs:
        AZURE_REGION:
           description: 'Azure Region'
           type: string
           required: true
        RESOURCE_GROUP_NAME: 
           description: 'Resource Group Name'
           type: string
           required: true
        MSI_NAME: 
           description: 'MSI Name'
           type: string
           required: true
        MSI_RESOURCE_GROUP: 
           description: 'MSI Resource Group'
           type: string
           required: true
        APP_NAME_PREFIX:
           description: 'App Name Prefix'
           type: string
           required: true
        BDD_WORKSPACE_PATH:
           description: 'App Name Prefix'
           type: string
           required: true
           default: 'WeatherForecastBDD'
        
jobs:
  dev-ci-cd:

    runs-on: self-hosted

    steps:
        - uses: ./.github/Workflows/ci-build.yaml
          with:
            SOLUTION_NAME: 'WeatherForecast'
            TEST_PROJECT_PATH: 'WeatherForecastTDD\WeatherForecastTDD.csproj'

        - uses: ./.github/Workflows/azure-infra-cicd.yaml
          id: azureInfraCICD
          with:
            AZURE_REGION: '${{inputs.AZURE_REGION}}'
            ENVIRONMENT_TYPE: 'dev'
            APP_NAME_PREFIX: '${{inputs.APP_NAME_PREFIX}}'
            RESOURCE_GROUP_NAME: '${{inputs.RESOURCE_GROUP_NAME}}'
            MSI_NAME: '${{inputs.MSI_NAME}}'
            MSI_RESOURCE_GROUP: '${{inputs.MSI_RESOURCE_GROUP}}'

        - uses: ./.github/Workflows/functions-api-cicd.yaml
          with:
            ENVIRONMENT_TYPE: 'dev'
            APP_NAME_PREFIX: '${{inputs.APP_NAME_PREFIX}}'
            RESOURCE_GROUP_NAME: '${{inputs.RESOURCE_GROUP_NAME}}'
            API_NAME: '${{steps.azureInfraCICD.outputs.apiName}}'
            APIM_NAME: '${{steps.azureInfraCICD.outputs.apimName}}'
            FUNCTION_NAME: '${{steps.azureInfraCICD.outputs.functionAppName}}'
            ORIGIN_URL: '${{steps.azureInfraCICD.outputs.staticWebsiteUrl}}'    
            
        - uses: ./.github/Workflows/spa-cicd.yaml
          with: 
            ENVIRONMENT_TYPE: 'dev'
            APP_NAME_PREFIX: '${{inputs.APP_NAME_PREFIX}}'
            RESOURCE_GROUP_NAME: '${{inputs.RESOURCE_GROUP_NAME}}'
            CLIENT_URL: '${{steps.azureInfraCICD.outputs.staticWebsiteUrl}}'
            API_URL: '${{steps.azureInfraCICD.outputs.apiUrl}}'
            API_AUTH_KEY: '${{steps.azureInfraCICD.outputs.authKey}}'
            AZURE_STORAGE_NAME: '${{steps.azureInfraCICD.outputs.staticWebsiteStorageAccountName}}'
            CDN_PROFILE_NAME: '${{steps.azureInfraCICD.outputs.cdnProfileName}}'
            CDN_ENDPOINT_NAME: '${{steps.azureInfraCICD.outputs.cdnEndpointName}}' 
            
        # Set app configurations of Angular
        - name: 'Replace tokens'
          uses: cschleiden/replace-tokens@v1.0
          with:
            tokenPrefix: '__'
            tokenSuffix: '__'
            files: ${{ github.workspace }}/${{ inputs.BDD_WORKSPACE_PATH }}/appConfig.json
          env: 
            weatherForecastAPIUrl: ${{ steps.azureInfraCICD.outputs.apiUrl }}
            authKey: ${{ steps.azureInfraCICD.outputs.authKey }}

        - name: 'BDD Test'
          uses: actions/cryptic-wizard/run-specflow-tests@v1.3.1
          with:
            test-assembly-path: WeatherForecastBDD/bin/Release/netcoreapp3.1
            test-assembly-dll: WeatherForecastBDD.dll
            output-html: WeatherForecastBDD.html