name: Build and publish Azure Functions
description: Build and publish Azure Functions
inputs:
      ENVIRONMENT_TYPE: 
        description: 'Environment: dev, test, or prod'
        required: true
        default: 'dev'
      APP_NAME_PREFIX: 
        description: 'Prefix to be used in naming Azure resources'
        required: true
        default: 'prefix'
      RESOURCE_GROUP_NAME: 
        description: 'Resource Group to deploy Azure resources'
        required: true
        default: 'resource-group'
      API_NAME: 
        description: 'API name'
        required: true
        default: '2do'
      APIM_NAME: 
        description: 'APIM name'
        required: true
        default: 'apim-name'
      FUNCTION_NAME: 
        description: 'Azure Functions name'
        required: true
        default: 'function-name'
      ORIGIN_URL: 
        description: 'Client app URL' # This is CDN endpoint URL
        required: true
        default: 'https://<cdn-endpoint-name>.azureedge.net'    
      DOTNET_VERSION: 
        description: '.NET version'
        required: true
        default: '3.1.410' 
      BICEP_FILE_PATH: 
        description: 'Bicep File PAth'
        required: true
        default: 'Deploy'
      BICEP_FILE_NAME: 
        description: 'Bicep File Name'
        required: true
        default: 'api'
      FUNCTIONAPP_PATH: 
        description: 'Function App Path'
        required: true
        default: 'WeatherForecastAPI'
  

runs:
    using: 'composite'
    steps:
    
    # Authentication
    # Set up the following secrets in your repository: AZURE_CREDENTIALS
    # For details on usage of secrets, please refer https://help.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets
    - name: Azure Login
      uses: azure/login@v1
      with:
        environment: 'dev'
        creds: ${{ secrets.AZURE_CREDENTIALS  }}

    # Setup .NET Core environment
    - name: Setup DotNet ${{ inputs.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ inputs.DOTNET_VERSION }}

    # Build .NET application
    - name: 'Build .NET application'
      shell: bash
      run: | 
        pushd ./${{ inputs.FUNCTIONAPP_PATH }}
        dotnet build --configuration Release --output ./outputs
        popd

    # Publish .NET application to Azure Function
    - name: Publish to Azure Functions to ${{ inputs.FUNCTION_NAME }}
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ inputs.FUNCTION_NAME }}
        package: ./${{ inputs.FUNCTIONAPP_PATH }}/outputs

    # Validate and Build ARM Template from Bicep
    - name: Azure CLI - Validate Bicep file ${{ inputs.BICEP_FILE_PATH }}/${{ inputs.BICEP_FILE_NAME }}.bicep
      uses: Azure/cli@1.0.4
      with:
        # Azure CLI version to be used to execute the script. If not provided, latest version is used
        azcliversion: 2.27.2
        # Specify the script here
        inlineScript: |
          az deployment group validate -g ${{ inputs.RESOURCE_GROUP_NAME }} --template-file ./${{ inputs.BICEP_FILE_PATH }}/main.bicep
          az bicep upgrade
          az bicep build --file ./${{ inputs.BICEP_FILE_PATH }}/${{ inputs.BICEP_FILE_NAME }}.bicep

    # Deployment Bicep template for Azure API Management REST API 
    - name: Import ${{ inputs.ENVIRONMENT_TYPE }} environment API to ${{ inputs.APIM_NAME }}
      id: apiDeployment
      uses: azure/arm-deploy@v1
      with:
        deploymentName: '${{ github.run_number }}-api'
        resourceGroupName: ${{ inputs.RESOURCE_GROUP_NAME }}
        template: ./${{ inputs.BICEP_FILE_PATH }}/${{ inputs.BICEP_FILE_NAME }}.json  
        parameters: apimName=${{ inputs.APIM_NAME }} openApiUrl=${{ inputs.API_DOCUMENT_URL }} originUrl=${{ inputs.ORIGIN_URL }} apimApiName=${{ inputs.API_NAME }}

    # Azure logout
    - name: logout
      shell: pwsh
      run: |
            az logout
      if: always()