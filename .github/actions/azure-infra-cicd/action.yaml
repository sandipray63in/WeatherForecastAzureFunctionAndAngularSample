name: Create Azure Resource
description: Create Azure Resource
inputs:
      BICEP_FILE_NAME:
       description: 'Bicep file Path'
       required: true
       default: 'main'
runs:
     using: 'composite'
     # CONFIGURATION
     # For help, go to https://github.com/Azure/Actions
     #
     # 1. Set up the following secrets in your repository:
     #   AZURE_CREDENTIALS
     #
     # 2. Change below variables for your configuration:
     
     steps:
        
        # Authentication
        # Set up the following secrets in your repository: AZURE_CREDENTIALS
        # For details on usage of secrets, please refer https://help.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets
        - name: Azure Login
          uses: azure/login@v1
          with:
            allow-no-subscriptions: true
            creds: ${{ env.AZURE_CREDENTIALS  }}

        # Build ARM Template from Bicep and create a target Azure resource group  
        - name: Azure CLI - Validate Bicep file ${{ env.BICEP_FILE_PATH }}/${{ inputs.BICEP_FILE_NAME }}.bicep
          uses: Azure/cli@1.0.4
          with:
            # Specify the script here
            inlineScript: |
              az group create -l ${{ env.AZURE_REGION }} -n ${{ env.RESOURCE_GROUP_NAME }}
              az deployment group validate -g ${{ env.APP_NAME_PREFIX }}-${{ env.ENVIRONMENT_TYPE }}-rg --template-file ./${{ env.BICEP_FILE_PATH }}/${{ inputs.BICEP_FILE_NAME }}.bicep
              az bicep upgrade 
              az bicep build --file ./${{ env.BICEP_FILE_PATH }}/${{ inputs.BICEP_FILE_NAME }}.bicep

        # Deployment Bicep template
        - name: Deploy ${{ env.ENVIRONMENT_TYPE }} environment infrastructure to ${{ env.RESOURCE_GROUP_NAME }}
          id: infraDeployment
          uses: azure/arm-deploy@v1
          with:
            deploymentName: ${{ github.run_number }}
            resourceGroupName: ${{ env.RESOURCE_GROUP_NAME }}
            template: ./${{ env.BICEP_FILE_PATH }}/${{ inputs.BICEP_FILE_NAME }}.json  # Set this to the location of your template file
            parameters: appNameSuffix=${{ env.APP_NAME_PREFIX }} environmentType=${{ env.ENVIRONMENT_TYPE }} userAssignedIdentityName=${{ env.MSI_NAME }} userAssignedIdentityResourceGroup=${{ env.MSI_RESOURCE_GROUP }}

        - name: Set Outputs
          shell: bash
          run: |
             echo "functionAppName=steps.infraDeployment.outputs.functionAppName" >> ${{env.GITHUB_OUTPUT}}
             echo "apiUrl=steps.infraDeployment.outputs.apiUrl" >> ${{env.GITHUB_OUTPUT}}
             echo "staticWebsiteStorageAccountName=steps.infraDeployment.outputs.staticWebsiteStorageAccountName" >> ${{env.GITHUB_OUTPUT}}
             echo "staticWebsiteUrl=steps.infraDeployment.outputs.staticWebsiteUrl" >> ${{env.GITHUB_OUTPUT}}
             echo "apimName=steps.infraDeployment.outputs.apimName" >> ${{env.GITHUB_OUTPUT}}
             echo "cdnEndpointName=steps.infraDeployment.outputs.cdnEndpointName" >> ${{env.GITHUB_OUTPUT}}
             echo "cdnProfileName=steps.infraDeployment.outputs.cdnProfileName" >> ${{env.GITHUB_OUTPUT}}
             echo "cdnEndpointURL=steps.infraDeployment.outputs.cdnEndpointURL" >> ${{env.GITHUB_OUTPUT}}
             echo "authKey=steps.infraDeployment.outputs.authKey" >> ${{env.GITHUB_OUTPUT}}
             echo "apiName=steps.infraDeployment.outputs.apiName" >> ${{env.GITHUB_OUTPUT}}

       # Azure logout
        - name: logout
          shell: bash
          run: |
                az logout
                az cache purge
                az account clear
          if: always()
    